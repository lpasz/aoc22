(ns aoc22.day_04.camp_cleanup
  (:require [clojure.set :as set]
            [clojure.string :as s])
  (:gen-class))

(def inp (slurp "../inputs/day-04/inp.txt"))

(defn count-schedule-overlap [text overlap?]
  (->> (s/split text #",|\n|-")
       (map #(Integer/parseInt %))
       (partition 4)
       (map (fn [[x1 x2 y1 y2]] [(into #{} (range x1 (inc x2)))
                                 (into #{} (range y1 (inc y2)))]))
       (reduce (fn [acc [range1 range2]] (if (overlap? range1 range2)
                                           (inc acc)
                                           acc)) 0)))

(defn fully-overlap? [range1 range2]
  (or (set/subset? range1 range2) (set/subset? range2 range1)))

(defn any-overlap? [range1 range2]
  (not-empty (set/intersection range1 range2)))

(defn ex1 [text]
  (count-schedule-overlap text fully-overlap?))

(defn ex2 [text]
  (count-schedule-overlap text any-overlap?))

;; (time (ex1 ex-inp))   ;; 2
;; (time (ex2 ex-inp))   ;; 4
(defn -main []
  (time (do (ex1 inp)     ;; 595
            (ex2 inp)))) ;; 952 

(def rust [5.481
            3.809
            3.578
            3.515
            3.501
            3.508
            3.637
            3.875
            3.641
            3.994
            3.662
            4.108
            3.896
            3.739
            3.869
            4.247
            3.761
            4.243
            3.723
            4.162
            4.748
            3.941
            4.091
            5.385
            4.007
            3.948
            3.825
            3.85
            3.96
            3.829
            3.879
            3.943
            4.596
            4.207
            4.132
            3.576
            3.492
            3.487
            3.592
            4.219
            3.987
            4.455
            3.807
            3.563
            3.489
            3.485
            3.567
            3.485
            3.513
            3.562
            3.505
            3.488
            3.486
            3.497
            3.501
            3.474
            3.51
            3.477
            3.523
            3.491
            3.498
            3.568
            3.506
            3.561
            3.49
            3.477
            3.496
            3.477
            4.532
            4.521
            3.715
            3.505
            3.553
            3.506
            3.559
            3.546
            3.597
            3.78
            3.536
            3.485
            3.55
            4.326
            4.112
            3.515
            3.498
            3.492
            3.481
            3.48
            3.483
            3.561
            3.497
            3.544
            3.473
            3.536
            3.481
            3.492
            3.471
            3.47
            3.486])

(def clj [66.177833
          46.562417
          28.086625
          33.852625
          26.42025
          25.422791
          28.454
          24.27225
          21.103583
          21.214375
          21.850959
          25.580708
          22.818833
          21.061
          20.356167
          23.1235
          20.425958
          20.087292
          23.043375
          23.598792
          25.856084
          22.880791
          24.489583
          25.532834
          30.182334
          25.469541
          24.34525
          26.185959
          25.402625
          27.801625
          24.620292
          26.396708
          25.373584
          19.900917
          22.688417
          19.87875
          19.836333
          20.536292
          23.674292
          19.645334
          21.571083
          23.848125
          23.521625
          27.890833
          22.573916
          25.143375
          23.265333
          28.2895
          23.101833
          25.785084
          26.315542
          22.499667
          26.525709
          23.803834
          25.909292
          20.066959
          32.283417
          20.539625
          24.946458
          26.890292
          23.937791
          26.037459
          24.110917
          24.575875
          23.591167
          23.586959
          23.201709
          22.379709
          25.007958
          23.770167
          25.925791
          22.78275
          19.717417
          19.41825
          19.330084
          20.573958
          22.413166
          24.469291
          19.503208
          21.936584
          24.045791
          27.134917
          26.05125
          25.256125
          23.040792
          26.173208
          22.99675
          21.740583
          20.129292
          20.636125
          20.325083
          23.926084
          24.610167
          25.071916
          25.12925
          22.474625
          20.572666
          24.202875
          22.657584
          24.544708])
(defn avg [coll]
  (/ (apply + coll) (count coll)))

(avg (drop 5 (sort max clj)))
(avg rust)